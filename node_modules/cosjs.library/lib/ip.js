

//IP转成整型
function _ip2int(ip)
{
    var num = 0;
    ip = ip.split(".");
    num = Number(ip[0]) * 256 * 256 * 256 + Number(ip[1]) * 256 * 256 + Number(ip[2]) * 256 + Number(ip[3]);
    num = num >>> 0;
    return num;
}

//整型解析为IP地址
function _int2ip(num)
{
    var tt = new Array();
    tt[0] = (num >>> 24) >>> 0;
    tt[1] = ((num << 8) >>> 24) >>> 0;
    tt[2] = (num << 16) >>> 24;
    tt[3] = (num << 24) >>> 24;
    return tt.join('.');
}


exports.encode = function(){
    if(typeof arguments[0] === 'object'){
        var ip=arguments[0]['host'],port = arguments[0]['port']||null;
    }
    else {
        var ip=arguments[0],port = arguments[1]||null;
    }
    var int = _ip2int(ip);
    if(!port){
        return int;
    }
    else {
        return [int,port].join(':');
    }
};

exports.decode = function(code){
    if(typeof code === 'number'){
        return _int2ip(code);
    }
    else if(code.indexOf(":")<0){
        return _int2ip(parseInt(code));
    }
    else{
        var arr = code.split(":");
        var host = _int2ip(parseInt(arr[0]));
        return {host:host,port:parseInt(arr[1])};
    }
};