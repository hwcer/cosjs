"use strict";
var json = require('./json');

exports = module.exports =function(data,format,initialize){
    if(typeof format != 'object'){
        return exports.parse(data,format);
    }
    else {
        data = data || {};
        return initialize ? complete(data,format) : transform(data,format);
    }
};

exports.parse = function (val, type,defaultValue) {
    if (type == 'int' || type == 'number' ) {
        return parseInt(val, 10)|| defaultValue ||0;
    }
    else if(type == 'float'){
        return parseFloat(val)|| defaultValue||0;
    }
    else if (type == 'json' || type == 'object' ) {
        return typeof val =='object' ? val: json.parse(val) || defaultValue || val;
    }
    else if ( type == 'array' ) {
        if(!Array.isArray(val)){
            val = json.parse(val);
        }
        if( val && defaultValue && defaultValue.length > val.length){
            for(var i=val.length;i<defaultValue.length;i++){
                val.push(defaultValue[i]);
            }
        }
        return val;
    }
    else if (type == 'string') {
        return val===null ? '' : val.toString();
    }
    else if (type == 'time') {
        return val ? new Date(val).getTime() : 0;
    }
    else {
        return val;
    }
}

var complete = function(json,config){
    for(var k in config){
        if( !(k in json) ){
            var v = config[k]['val'];
            json[k] = typeof v == 'object' ? clone(v) :v ;
        }
        else if(config[k]['format'] && typeof json[k] == 'object'){
            json[k] = complete(json[k],config[k]['format']);
        }
        else{
            json[k] = exports.parse(json[k], config[k]['type'],config[k]['val']);
        }
    }
    return json;
}

var transform = function(json,config){
    for(var k in json){
        if(!config[k]){
            continue;
        }
        if(config[k]['format'] && typeof json[k] == 'object'){
            json[k] = transform(json[k],config[k]['format']);
        }
        else{
            json[k] = exports.parse(json[k], config[k]['type'],config[k]['val']);
        }
    }
    return json;
}

var clone = function(v){
    return JSON.parse(JSON.stringify(v));
}